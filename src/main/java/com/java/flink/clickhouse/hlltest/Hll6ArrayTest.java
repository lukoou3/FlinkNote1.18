package com.java.flink.clickhouse.hlltest;

import org.junit.Test;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.StandardCharsets;
import java.util.*;

public class Hll6ArrayTest {

    @Test
    public void testSize() {
        long[] ns = new long[]{100, 1000, 10000, 100000, 10000000, 50000000, 100000000, 600000000};
        for (long n : ns) {
            Hll6Array hll = new Hll6Array(14);
            for (int i = 0; i < n; i++) {
                String key = i + "";
                hll.add(key);
            }
            long estimate = Math.round(hll.size()) ;
            double percentErr = Math.abs(estimate - n) * 100D / n;
            System.out.println("n:" + n + ",estimate:" + estimate+ ",percentErr:" + percentErr);
        }
    }

    @Test
    public void catClickHouseOutSet() throws Exception {
        String str = "AoABAdQ8Y8S2TIEEbLc+Mqap+wVINoFOQqQZBqcXZn2l/vUHdNAHTmi0TAnqSZggCkH0DmPzU8ZI8kETPzgveaX/Chj58/8/pHoqG6XX2kTR/UkdNRQePmU2jB7IQ8FXXu15IVy55W0QVZUjHHVkusyDLCWjPcB0lLLGKVQo8Vp5kEkr4/1un90O5S6iQB2fqwPdLkG/YnjIf30vQygRay0PSDDBuNChq3p1NVQ606WTnIo27s7+IKPkzjc6GqMG39pYOONsm8eGDGs50/KSM+jOeDweHBVcep3ePMffyrPM+YFAc5L6FeJqckFgbknkOJ+hQi9rgP1N1/NGAW3axeLNj0YQA2iAMLPDSuMTo5GeI0NKZme2wDwGpUqBnYWiLRNCUCvi6iSlu3FTR7v5dJ61w1N9ow8yUT98WJCdtEyFeK9YxKEaRWESBVqdForMmZVMWjf3L6IsvGxeTv7Geu23zV8XN1rePJcTYMMxs8prfuNiJlEUQzBfJ2VJwUnu/NrVZp0o3aqW4kBmV3/RiRhbjGhrnZ4li6XyaSCnZ9jPajVqGFsjJxd6nHFLmm0TnMJDcrCay5/GfTN2t4nc/F9/8Hena7OdIHvyd/gFahyr+QJ3t/btsNGfOnr1xgzk4Z+be8wxHGGxJeh+Vk/7UigbHn+pGLg6Q6sJgIVXR5LxLmx/I+kZvigVO4InrK7PhjLMg5H5fWJtfvmI2CVWlB+Sp4r1FGDA/RNEi6nOf2rDuOqMtuXTbtHqh5DbdPK5s8Y3l8781msp9FqdTmgIMYt3JZ5NMf7byOEJnUTA7k1tZr+gQoxV0MjGb6RTle38J4JHppzhRdg+cMirSAJeS/1fpK7drlCXxQ9Ts6ifwT0P48u0LGb+OX2RO7QaBHzVx7x8us6okDglJ266MMtE/hIPQ72Ln1LcsJ1AvlZIlAXDVLXAjXs1dNG05cGRAdG0L58twb1wmyg0SazDrMbOUXAuGsOrwI5i5+FgzL3O3sK/SbrNdgMR/DOGHdAFSURAa6wN03PJvNgXEdfUuURd1ocvQ9jPNWThzVwf2ObYaWSnD8vdQRqTYZ6O1d3x8ujO5/Zq3xtMXbAvqIDh4TiFxbVT4eHTz2wA4NOS5KOh5kV2sKHlQbKzi9UC4OYMQrDHuf3I5oplGVrSx/TpzBy8bV7GZOq3RydauqYr64ddP9UlzePsMSz111aVeO0fOZcyYxXf7NZvv5RuwtTtcn1YXx1nH+vJydZQwUeu8VDWQs7BZJ7x6oBcbO9ATPM07v5C7j9N9HCQXEJrgQT1RNPlKYbpE+qTXEbMuLVf91R6+/CnbjX4qYZGbYprrPlmR+fZxTyl+gMLtMsUQ7j9zl2bYhTVkg==";
        byte[] bytes = Base64.getDecoder().decode(str.getBytes(StandardCharsets.UTF_8));
        System.out.println(bytes.length);
        ByteBuffer buffer = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
        int tp = buffer.get();
        int size = (int)readVarInt(buffer);
        System.out.println("tp:" + tp);
        System.out.println("size:" + size);
        System.out.println("remaining:" + size * 8 + "-" + buffer.remaining());
        Set<Long> hashes = new HashSet<>();
        for (int i = 0; i < size; i++) {
            long hash = buffer.getLong();
            System.out.println(i + ":" + hash);
            hashes.add(hash);
        }
        System.out.println(hashes.size());
    }

    @Test
    public void catClickHouseOutHll1() throws Exception {
        String str = "AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABAAADAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAggwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAQAAIAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAQAAAAAAAAAABQAAAAAAIABAAAAEAAAAAAAAAAAAAgwgAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAABAAAAAEAAAAABAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMPAAA5AAAAIAAAABUAAAAJAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMP";
        byte[] bytes = Base64.getDecoder().decode(str.getBytes(StandardCharsets.UTF_8));
        int precision = 12;
        System.out.println(bytes.length);
        ByteBuffer buffer = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
        int tp = buffer.get();
        System.out.println("tp:" + tp);
        Hll6Array hll = new Hll6Array(precision);
        System.out.println("regs.length:" + hll.regs.length);
        buffer.get(hll.regs);

        Map<Integer, Integer> rank_counts = new HashMap<>();
        for (int i = 0; i < hll.reg; i++) {
            int reg = hll.getRegister(i);
            int cnt = rank_counts.getOrDefault(reg, 0);
            rank_counts.put(reg, cnt + 1);
        }

        int max_rank = 64 - precision + 1;
        int rank_count_size = max_rank + 1;
        int[] rank_count = new int[rank_count_size];
        for (int i = 0; i < rank_count_size; i++) {
            rank_count[i] = buffer.getInt();
            System.out.println(String.format("rank:%d,count:%d-%d-%s", i, rank_count[i],
                    rank_counts.getOrDefault(i, 0), rank_count[i] == rank_counts.getOrDefault(i, 0)));
        }

        System.out.println(String.format("%d(regs.length) + %d * 4(rank_count_size) + 2(zeros) = %d",
                hll.regs.length, rank_count_size * 4 , hll.regs.length + rank_count_size * 4 +  2) );
        int zeros = buffer.getShort();
        System.out.println("zeros:" + zeros);
        System.out.println("estimate size:" + hll.size());
    }

    @Test
    public void catClickHouseOutHll2() throws Exception {
        String str = "AwAABAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAEACAAAAAFgAABAAIAAAAAAAAAAAIEAAAAQAAAQAAAQBAAADAAAAAEAAEAgAAAAAAIAAIAAAAAAAAAgAEAAAAAAAEAAAAAAAEAAAEAACAEAEAAAAAAAAIABCAABAAAAAEAAAAAAAEAAAAAAAAAAAEEQAAAAAAAABAAAAAAAAEAABAIAAAAwAEAACAAAAAIAAAAAAEIQAEEABEAQAAEACIAgAAAAAAAAAAAAAAAAAAAAAAAACAEAAAAAAEAAAAAAAIAADEAAAAAwAAMBAAAAAAAACAAAAAAABAJQAAFAAAEAAEIAAAAAAAAAAAAAAAAAAABQAAAAAAAABAAAAAAAAEAwAAAABIAABAAAAAAAAEAABAEAAAAAAIAAAAEAAAAAAAMADAAAAAAAAAAQAAAAAAAAAAAAAEAAAAAwAAAAAAAAAAAAAAAAAMEAAMAACIAAAMAQAAAAAAEAAAAACAEAGAEAAAAAAAABAIIACIMAAIAAAIAAAEAAFABAAAAAAAAABEAAAAABAAEwAAAAAAAAAIAAAAAAAEIAAMAADAEADAAABIAAAIAAAAAAAAAAAAAAAAAQAAAAAAAAAAEAAAAQAAEAAMAAAIAAAAMAAIAAAEQAAAAABAAAAAAAAAAAAEMAAAAAAAAACAAAAAAAAAAAAAQAAAEAAEAQAAAAAMAAAEAwAAYAFAAAAEAABAAQAAEgAAAgEAAAAEMAAAEwAIAABMAAAAAAAAAAAMAAEAUAAAAwCAMADAAAAAAAAEAAAAEAAIAAAIIQCAAwGAAAAAAQAEIQAAAAAAEAAAAQAMIhAAAAAAAAAAAAAAAAAAEQAAMQAAAQAAEAAIAAEAAAAIAAAAAAAAAACAAAAAEwAAAgAAAQBAEAGAAQCAAAAAUgAAAAAAEACAAAAAEAAAAgAAAwAAAACAAAAAAwAAAAAIAQAAIAAAAQBAEAAAAgAAAAAEAAAAIAAAAwAAAAAAAACAAAAABQAAAAAEBAAAAABAAADAEAAAAgAAAAAAIABAAAAAAQAAAAAEAAAAMgAAAAAEAQAAAAAEAQAAAQAEAAAAFQAAAAAAAQAAAAAIMAAAAAAAAAAAIAAAAAAAAQAAAQAAAAAAAgAAEAAAAACAQAAAAAAEAAAAQAAABQAAAAAMEAAAAAAAAADAAABAAAAAAAAAAACAIQAAAAAAAABAIAAAAAAAAABMAAAEAAAABAAAAAAAIAAEAABAAAAAIQAAAABMAABAAAAAAAAAAAAAAACAAAAAEAAEEAAAAQAAAQCIAAAAAAAAAAAEEABAAwAAAAAAIABABQAAAAAAAAAEAAAAAQAAAAAAAAAAAACAAAAAAACABQAAAAAAEAAAAAEAAABAEACAAQAAEAAMQQAAAAAAAQCAAAEAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAMAAAAAAAAAAAIgAAAAAAAAAAAAAAEAAAUwAAAAAAAAAEAQAAAAFAAAAAAACAAAAAAgAIMADEAAAAMAAMAAAAAABABwDAAAAEAACAAABAAAAAAAAAAAEAAAAMAAAAAAAAMAAAMAAAAQAAAAAAMAAAAgAAAgAAAAAAAQBEAAAAEAAAAgAAAgBAAwCAYAAAAQAEAAAAAAAAAQAAAQAAAAAAAABAAAAAEQAAAAAAAgAAEAAAAAAAAADAAABAAAFAIAAIQAAIAAAAAAAEAQAABgEAAAAAAAAEAACAAAAAAABAIAAAAAAEAAAAAAAAAgAIMACAIAAAAAAIAAAAIAEAAQBAAgAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAAAAAAAAAAAEAAAAAAIAAAAMwAAAAAAAAAAAAAAAAAEBADEAAAAAQBAAABAEwBEFQAAAAAAIABAEAAEAQCAAAAAAAAAAgAAAQAAAAAAAQAAAAAAAAAAAAAAAAAIQADAABBAAAAAAAAEAAAAAAAAAAAAIgAIAAAAAABAABBAAAAAAAAAIAAEAAAAEBAAIAAABQAAAwEAAACAAAAAEAAAAQAAIgCAAAAMEABAIQBAEAFAAABABAAAAAAAEwAAEAAAAAAIAADAAAAAAAAAAAAAAAAEAAAAARAAAAAAAgBEAAAAEAAAAQAAYAAIAAAIAAAABAAAAQAAEAAAAAAAAgBAEAAAAAAAAAAAAABAEQAAIQAAAAAAAAEEAAAABgAAAQAAAAAEAADABABEAACAIAAAAAAAAAAAAgFEAQAAAAAAAAAEAAAAAAAAAADAEAAIAAAAAAAAIAAAAACIAAAAAAAAAAAAAAAEAQBIAAAABgAAAAAAAAAAEAAEIAAAIAAEAACAAAAAAQAAAAAAAACAEAAAAwAAIAAAAADAAAAAAAAAAAAIAQAEIAAAAgAAAAAAAgAMAAAAAAAAAwAAAADAEAAAIQAAAACAAAAAAAAAAQEAAAAAAAAEAAAAQAAAAAAAMAAAAAAAAAAAAAAAAQAAAAAAAwDAAAAAEAAEAAAAAAAAAAAAAAAEEAAIAAAIAACMABAAIgAAAADAAAAIAgAAAAAAIAAAAAAAAAAABAAIAABAAQAEAAAAAACAAAAAAAAAAQCAAQAAAAAAAAAAIAAIAABAAAAAAABEAQAAAQAAEQBAAAAAAAAAAAAAAAAAABAMABAEAAAAAgBAMAAAAAAAEABAAAAAIAAAAABAIAAAAAAIIAAAEAAAAADAABAAAAAAAAAAAAAAMAAAAACAAAAAEAGEMAAAAAAAAQAAAAAAAgAAAABAAAAEIBAAAAAAAACAAADANAAAAAAEAAFIMAAAIAAAAAAEIAAAAwAAAAAAAAAEAAAAIAAAAAAAEAAAAAAAAACAAgAAAACAAAAAAAAEAAFAAAAAQQAAAAAIAAAAAAAAAgAAIAAABAAAAgAAAAAAAAAAEAAAIABAAABMEAAAQQAEAAAAAAAEAAAAAQAAQABAAAAAEAAAAAAAMAAAAAAEAAAAAABAAAAAAAAAQABAAAAAAAAAABAAAACAAAAAQAAAEAFAEACAAAAAAAAAAABAAADAAACAIAAEAAAIAAAAIADIEAAAAAAAAgAAIABIAAAIJABAAAAAAAAMAAAAAACEAABAAAAAAAAEAAAIAAAAAAAAAAAAAAAAAABAAACAAAAAAAAAAAAIAAAIAAAEAAAEEAAAAAAAEAAAAAAAEAAAAABAAADAIABABgBAAABAAABAAAAEAADAEAAAIAAAAQAAAABIAQAAAACAAAAAAAAAIAAMAAAAAAAAAQCEAAAABADAAAHAMAAAAAAAAACAAAAMAAAAFgAMAAAAAAAAAACAAAAEABAEBwCAAABAAAAIAADAAAAAIAAAMAAAAQDEAAAAFgAAAABAAAAEQAAEQQAAAQAAAgAAAABAAAAAAAAMAAAAAAAAAABAAAAAEQAAAAAAAAAAAhAAAgAEAAAABQAAEAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAADIAwAAAABAEAAEIAAAAQAAAABAAAAAAQAAUwAIQAAAAACEAAEAEAAAAAAIAAAAAAAAAACMAxDAAAAAAAAAAAAAAAAAEAAAAAAAAAAEAAAAUAAAAwAAMAAAAAAAAAAAMAAAAABAAAAAAQAEABAAIQAAAAAAAgEAAAAAEAAAAAAAAAAAAAAAIQAEAABAAAAAAAAAAwAAABAAABAAAACAAAAAAAAAYAAAIAAAAAAAIAAIAAAAAAAAAAAAAABAEQDAAgAMAABAIwAAAAAAAAAEAwAAAAAEAAAAAwAAAAAAAAAMEAAAIAAAAAAAAQAAAAAAAQFAAAAAAABAEADAEAAAIABAEAAAAAAAAAAMAAAEAAAAAAAAAAAAAAFAEABAAACAAAAAIQAAAAAMAABAAAAAEAEAAAAAAABAAQAAAgCAAgAAAAAAAAAAEAAAAAAAAQAAAACAAwAAAAAAAAAAAAAAAAAAAAAAAAAEEAAAAACIAwAAAwEAABAAAAAAAABIAAAEAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAMACAAAAAAAAAEAAABAAEAAAAAQDAAAAAAAAMAAAJEMAACJAQAA9QAAAH4AAAA/AAAAHQAAABAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEM";
        byte[] bytes = Base64.getDecoder().decode(str.getBytes(StandardCharsets.UTF_8));
        int precision = 12;
        System.out.println(bytes.length);
        ByteBuffer buffer = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
        int tp = buffer.get();
        System.out.println("tp:" + tp);
        Hll6Array hll = new Hll6Array(precision);
        System.out.println("regs.length:" + hll.regs.length);
        buffer.get(hll.regs);

        Map<Integer, Integer> rank_counts = new HashMap<>();
        for (int i = 0; i < hll.reg; i++) {
            int reg = hll.getRegister(i);
            int cnt = rank_counts.getOrDefault(reg, 0);
            rank_counts.put(reg, cnt + 1);
        }

        int max_rank = 64 - precision + 1;
        int rank_count_size = max_rank + 1;
        int[] rank_count = new int[rank_count_size];
        for (int i = 0; i < rank_count_size; i++) {
            rank_count[i] = buffer.getInt();
            System.out.println(String.format("rank:%d,count:%d-%d-%s", i, rank_count[i],
                    rank_counts.getOrDefault(i, 0), rank_count[i] == rank_counts.getOrDefault(i, 0)));
        }

        System.out.println(String.format("%d(regs.length) + %d * 4(rank_count_size) + 2(zeros) = %d",
                hll.regs.length, rank_count_size * 4 , hll.regs.length + rank_count_size * 4 +  2) );
        int zeros = buffer.getShort();
        System.out.println("zeros:" + zeros);
        System.out.println("estimate size:" + hll.size());
    }

    /**
     * 知道ck hll的数据格式，就能自己直接插入hll了，可以看到格式还是比较明显的。
     * 从array => set => hll。
     */
    @Test
    public void catClickHouseOutSetAndHll() throws Exception {
        String str1 = "AoABAdQ8Y8S2TIEEbLc+Mqap+wVINoFOQqQZBqcXZn2l/vUHdNAHTmi0TAnqSZggCkH0DmPzU8ZI8kETPzgveaX/Chj58/8/pHoqG6XX2kTR/UkdNRQePmU2jB7IQ8FXXu15IVy55W0QVZUjHHVkusyDLCWjPcB0lLLGKVQo8Vp5kEkr4/1un90O5S6iQB2fqwPdLkG/YnjIf30vQygRay0PSDDBuNChq3p1NVQ606WTnIo27s7+IKPkzjc6GqMG39pYOONsm8eGDGs50/KSM+jOeDweHBVcep3ePMffyrPM+YFAc5L6FeJqckFgbknkOJ+hQi9rgP1N1/NGAW3axeLNj0YQA2iAMLPDSuMTo5GeI0NKZme2wDwGpUqBnYWiLRNCUCvi6iSlu3FTR7v5dJ61w1N9ow8yUT98WJCdtEyFeK9YxKEaRWESBVqdForMmZVMWjf3L6IsvGxeTv7Geu23zV8XN1rePJcTYMMxs8prfuNiJlEUQzBfJ2VJwUnu/NrVZp0o3aqW4kBmV3/RiRhbjGhrnZ4li6XyaSCnZ9jPajVqGFsjJxd6nHFLmm0TnMJDcrCay5/GfTN2t4nc/F9/8Hena7OdIHvyd/gFahyr+QJ3t/btsNGfOnr1xgzk4Z+be8wxHGGxJeh+Vk/7UigbHn+pGLg6Q6sJgIVXR5LxLmx/I+kZvigVO4InrK7PhjLMg5H5fWJtfvmI2CVWlB+Sp4r1FGDA/RNEi6nOf2rDuOqMtuXTbtHqh5DbdPK5s8Y3l8781msp9FqdTmgIMYt3JZ5NMf7byOEJnUTA7k1tZr+gQoxV0MjGb6RTle38J4JHppzhRdg+cMirSAJeS/1fpK7drlCXxQ9Ts6ifwT0P48u0LGb+OX2RO7QaBHzVx7x8us6okDglJ266MMtE/hIPQ72Ln1LcsJ1AvlZIlAXDVLXAjXs1dNG05cGRAdG0L58twb1wmyg0SazDrMbOUXAuGsOrwI5i5+FgzL3O3sK/SbrNdgMR/DOGHdAFSURAa6wN03PJvNgXEdfUuURd1ocvQ9jPNWThzVwf2ObYaWSnD8vdQRqTYZ6O1d3x8ujO5/Zq3xtMXbAvqIDh4TiFxbVT4eHTz2wA4NOS5KOh5kV2sKHlQbKzi9UC4OYMQrDHuf3I5oplGVrSx/TpzBy8bV7GZOq3RydauqYr64ddP9UlzePsMSz111aVeO0fOZcyYxXf7NZvv5RuwtTtcn1YXx1nH+vJydZQwUeu8VDWQs7BZJ7x6oBcbO9ATPM07v5C7j9N9HCQXEJrgQT1RNPlKYbpE+qTXEbMuLVf91R6+/CnbjX4qYZGbYprrPlmR+fZxTyl+gMLtMsUQ7j9zl2bYhTVkg==";
        String str2 = "AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAABAAADAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAggwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAQAAIAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAQAAAAAAAAAABQAAAAAAIABAAAAEAAAAAAAAAAAAAgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAEAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAFAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAABAAAAAEAAAAABAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMPAAA5AAAAIAAAABUAAAAJAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMP";
        String str3 = "AwAABAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAEACAAAAAFgAABAAIAAAAAAAAAAAIEAAAAQAAAQAAAQBAAADAAAAAEAAEAgAAAAAAIAAIAAAAAAAAAgAEAAAAAAAEAAAAAAAEAAAEAACAEAEAAAAAAAAIABCAABAAAAAEAAAAAAAEAAAAAAAAAAAEEQAAAAAAAABAAAAAAAAEAABAIAAAAwAEAACAAAAAIAAAAAAEIQAEEABEAQAAEACIAgAAAAAAAAAAAAAAAAAAAAAAAACAEAAAAAAEAAAAAAAIAADEAAAAAwAAMBAAAAAAAACAAAAAAABAJQAAFAAAEAAEIAAAAAAAAAAAAAAAAAAABQAAAAAAAABAAAAAAAAEAwAAAABIAABAAAAAAAAEAABAEAAAAAAIAAAAEAAAAAAAMADAAAAAAAAAAQAAAAAAAAAAAAAEAAAAAwAAAAAAAAAAAAAAAAAMEAAMAACIAAAMAQAAAAAAEAAAAACAEAGAEAAAAAAAABAIIACIMAAIAAAIAAAEAAFABAAAAAAAAABEAAAAABAAEwAAAAAAAAAIAAAAAAAEIAAMAADAEADAAABIAAAIAAAAAAAAAAAAAAAAAQAAAAAAAAAAEAAAAQAAEAAMAAAIAAAAMAAIAAAEQAAAAABAAAAAAAAAAAAEMAAAAAAAAACAAAAAAAAAAAAAQAAAEAAEAQAAAAAMAAAEAwAAYAFAAAAEAABAAQAAEgAAAgEAAAAEMAAAEwAIAABMAAAAAAAAAAAMAAEAUAAAAwCAMADAAAAAAAAEAAAAEAAIAAAIIQCAAwGAAAAAAQAEIQAAAAAAEAAAAQAMIhAAAAAAAAAAAAAAAAAAEQAAMQAAAQAAEAAIAAEAAAAIAAAAAAAAAACAAAAAEwAAAgAAAQBAEAGAAQCAAAAAUgAAAAAAEACAAAAAEAAAAgAAAwAAAACAAAAAAwAAAAAIAQAAIAAAAQBAEAAAAgAAAAAEAAAAIAAAAwAAAAAAAACAAAAABQAAAAAEBAAAAABAAADAEAAAAgAAAAAAIABAAAAAAQAAAAAEAAAAMgAAAAAEAQAAAAAEAQAAAQAEAAAAFQAAAAAAAQAAAAAIMAAAAAAAAAAAIAAAAAAAAQAAAQAAAAAAAgAAEAAAAACAQAAAAAAEAAAAQAAABQAAAAAMEAAAAAAAAADAAABAAAAAAAAAAACAIQAAAAAAAABAIAAAAAAAAABMAAAEAAAABAAAAAAAIAAEAABAAAAAIQAAAABMAABAAAAAAAAAAAAAAACAAAAAEAAEEAAAAQAAAQCIAAAAAAAAAAAEEABAAwAAAAAAIABABQAAAAAAAAAEAAAAAQAAAAAAAAAAAACAAAAAAACABQAAAAAAEAAAAAEAAABAEACAAQAAEAAMQQAAAAAAAQCAAAEAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAMAAAAAAAAAAAIgAAAAAAAAAAAAAAEAAAUwAAAAAAAAAEAQAAAAFAAAAAAACAAAAAAgAIMADEAAAAMAAMAAAAAABABwDAAAAEAACAAABAAAAAAAAAAAEAAAAMAAAAAAAAMAAAMAAAAQAAAAAAMAAAAgAAAgAAAAAAAQBEAAAAEAAAAgAAAgBAAwCAYAAAAQAEAAAAAAAAAQAAAQAAAAAAAABAAAAAEQAAAAAAAgAAEAAAAAAAAADAAABAAAFAIAAIQAAIAAAAAAAEAQAABgEAAAAAAAAEAACAAAAAAABAIAAAAAAEAAAAAAAAAgAIMACAIAAAAAAIAAAAIAEAAQBAAgAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAAAAAAAAAAAEAAAAAAIAAAAMwAAAAAAAAAAAAAAAAAEBADEAAAAAQBAAABAEwBEFQAAAAAAIABAEAAEAQCAAAAAAAAAAgAAAQAAAAAAAQAAAAAAAAAAAAAAAAAIQADAABBAAAAAAAAEAAAAAAAAAAAAIgAIAAAAAABAABBAAAAAAAAAIAAEAAAAEBAAIAAABQAAAwEAAACAAAAAEAAAAQAAIgCAAAAMEABAIQBAEAFAAABABAAAAAAAEwAAEAAAAAAIAADAAAAAAAAAAAAAAAAEAAAAARAAAAAAAgBEAAAAEAAAAQAAYAAIAAAIAAAABAAAAQAAEAAAAAAAAgBAEAAAAAAAAAAAAABAEQAAIQAAAAAAAAEEAAAABgAAAQAAAAAEAADABABEAACAIAAAAAAAAAAAAgFEAQAAAAAAAAAEAAAAAAAAAADAEAAIAAAAAAAAIAAAAACIAAAAAAAAAAAAAAAEAQBIAAAABgAAAAAAAAAAEAAEIAAAIAAEAACAAAAAAQAAAAAAAACAEAAAAwAAIAAAAADAAAAAAAAAAAAIAQAEIAAAAgAAAAAAAgAMAAAAAAAAAwAAAADAEAAAIQAAAACAAAAAAAAAAQEAAAAAAAAEAAAAQAAAAAAAMAAAAAAAAAAAAAAAAQAAAAAAAwDAAAAAEAAEAAAAAAAAAAAAAAAEEAAIAAAIAACMABAAIgAAAADAAAAIAgAAAAAAIAAAAAAAAAAABAAIAABAAQAEAAAAAACAAAAAAAAAAQCAAQAAAAAAAAAAIAAIAABAAAAAAABEAQAAAQAAEQBAAAAAAAAAAAAAAAAAABAMABAEAAAAAgBAMAAAAAAAEABAAAAAIAAAAABAIAAAAAAIIAAAEAAAAADAABAAAAAAAAAAAAAAMAAAAACAAAAAEAGEMAAAAAAAAQAAAAAAAgAAAABAAAAEIBAAAAAAAACAAADANAAAAAAEAAFIMAAAIAAAAAAEIAAAAwAAAAAAAAAEAAAAIAAAAAAAEAAAAAAAAACAAgAAAACAAAAAAAAEAAFAAAAAQQAAAAAIAAAAAAAAAgAAIAAABAAAAgAAAAAAAAAAEAAAIABAAABMEAAAQQAEAAAAAAAEAAAAAQAAQABAAAAAEAAAAAAAMAAAAAAEAAAAAABAAAAAAAAAQABAAAAAAAAAABAAAACAAAAAQAAAEAFAEACAAAAAAAAAAABAAADAAACAIAAEAAAIAAAAIADIEAAAAAAAAgAAIABIAAAIJABAAAAAAAAMAAAAAACEAABAAAAAAAAEAAAIAAAAAAAAAAAAAAAAAABAAACAAAAAAAAAAAAIAAAIAAAEAAAEEAAAAAAAEAAAAAAAEAAAAABAAADAIABABgBAAABAAABAAAAEAADAEAAAIAAAAQAAAABIAQAAAACAAAAAAAAAIAAMAAAAAAAAAQCEAAAABADAAAHAMAAAAAAAAACAAAAMAAAAFgAMAAAAAAAAAACAAAAEABAEBwCAAABAAAAIAADAAAAAIAAAMAAAAQDEAAAAFgAAAABAAAAEQAAEQQAAAQAAAgAAAABAAAAAAAAMAAAAAAAAAABAAAAAEQAAAAAAAAAAAhAAAgAEAAAABQAAEAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAADIAwAAAABAEAAEIAAAAQAAAABAAAAAAQAAUwAIQAAAAACEAAEAEAAAAAAIAAAAAAAAAACMAxDAAAAAAAAAAAAAAAAAEAAAAAAAAAAEAAAAUAAAAwAAMAAAAAAAAAAAMAAAAABAAAAAAQAEABAAIQAAAAAAAgEAAAAAEAAAAAAAAAAAAAAAIQAEAABAAAAAAAAAAwAAABAAABAAAACAAAAAAAAAYAAAIAAAAAAAIAAIAAAAAAAAAAAAAABAEQDAAgAMAABAIwAAAAAAAAAEAwAAAAAEAAAAAwAAAAAAAAAMEAAAIAAAAAAAAQAAAAAAAQFAAAAAAABAEADAEAAAIABAEAAAAAAAAAAMAAAEAAAAAAAAAAAAAAFAEABAAACAAAAAIQAAAAAMAABAAAAAEAEAAAAAAABAAQAAAgCAAgAAAAAAAAAAEAAAAAAAAQAAAACAAwAAAAAAAAAAAAAAAAAAAAAAAAAEEAAAAACIAwAAAwEAABAAAAAAAABIAAAEAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAMACAAAAAAAAAEAAABAAEAAAAAQDAAAAAAAAMAAAJEMAACJAQAA9QAAAH4AAAA/AAAAHQAAABAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJEM";

        byte[] bytes1 = Base64.getDecoder().decode(str1.getBytes(StandardCharsets.UTF_8));
        byte[] bytes2 = Base64.getDecoder().decode(str2.getBytes(StandardCharsets.UTF_8));
        byte[] bytes3 = Base64.getDecoder().decode(str3.getBytes(StandardCharsets.UTF_8));

        Hll6Array hll1 = catClickHouseOutDesHll(bytes1); // [  1-128]
        Hll6Array hll2 = catClickHouseOutDesHll(bytes2); // [101-229]
        Hll6Array hll3 = catClickHouseOutDesHll(bytes3); // [ 1-1000]

        System.out.println("hll1:" + hll1.size());
        System.out.println("hll2:" + hll2.size());
        System.out.println("hll3:" + hll3.size());

        System.out.println("hll1 U hll2:" + merge(hll1, hll2).size());
        System.out.println("hll1 U hll3:" + merge(hll1, hll3).size());
        System.out.println("hll2 U hll3:" + merge(hll2, hll3).size());
        System.out.println("hll1 U hll2 U hll3:" + merge(hll1, merge(hll2, hll3)).size());
    }

    public static Hll6Array merge(Hll6Array hll1, Hll6Array hll2){
        Hll6Array hll = new Hll6Array(hll1.precision);
        System.arraycopy(hll1.regs, 0, hll.regs, 0, hll.regs.length);
        int srcV, tgtV, reg = hll2.reg;
        for (int i = 0; i < reg; i++) {
            srcV = hll2.getRegister(i);
            tgtV = hll.getRegister(i);
            if (srcV > tgtV) {
                hll.setRegister(i, srcV);
            }
        }
        return hll;
    }

    public Hll6Array catClickHouseOutDesHll(byte[] bytes) throws Exception {
        int precision = 12;
        Hll6Array hll = new Hll6Array(precision);

        ByteBuffer buffer = ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN);
        int tp = buffer.get();
        if(tp == 2){
            int size = (int)readVarInt(buffer);
            for (int i = 0; i < size; i++) {
                long hash = buffer.getLong();
                hll.addHash(hash);
            }
        } else if (tp == 3) {
            buffer.get(hll.regs);
            int max_rank = 64 - precision + 1;
            int rank_count_size = max_rank + 1;
            int[] rank_count = new int[rank_count_size];
            for (int i = 0; i < rank_count_size; i++) {
                rank_count[i] = buffer.getInt();
            }
            int zeros = buffer.getShort();
            assert !buffer.hasRemaining();
        }

        return hll;
    }

    public long readVarInt(ByteBuffer buffer) throws IOException {
        int number = 0;
        for (int i = 0; i < 9; i++) {
            int byt = buffer.get();

            number |= (byt & 0x7F) << (7 * i);

            if ((byt & 0x80) == 0) {
                break;
            }
        }
        return number;
    }
}
